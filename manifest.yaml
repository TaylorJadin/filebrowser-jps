type: install
id: filebrowser
version: '1.0'
appVersion: latest
name: Filebrowser
logo: https://raw.githubusercontent.com/TaylorJadin/filebrowser-jps/main/logo.png
homepage: https://filebrowser.org/
categories: 
- apps/education
description: 
  text: "filebrowser provides a file managing interface within a specified directory and it can be used to upload, delete, preview, rename and edit your files. It allows the creation of multiple users and each user can have its own directory. It can be used as a standalone app."
  short: "A sime web-based file management tool."

globals:
  shortname: filebrowser
  path: /root/filebrowser
  repo: https://github.com/taylorjadin/filebrowser-jps

nodes:
  nodeType: dockerengine
  nodeGroup: cp
  cloudlets: 32
  fixedcloudlets: 1
  extip: true
  displayName: AppServer
  addons: [change-domain, update]
  volumes: ["${globals.path}"]

settings:
  domain:
    fields:
      - name: displayfield
        type: displayfield
        hideLabel: true
        markup: |
          The new domain should already have an A record pointed at this environment's IP address.
      - name: domain
        hideLabel: true
        caption: Domain
        type: string
        vtype: extdomain

onInstall:
  - setup

actions:
  setup:      
    - cmd[cp]: |-
        mkdir -p ${globals.path}
        cd ${globals.path}
        git clone ${globals.repo} --depth 1 .
        rm -rf .git
        rm manifest.yaml
        rm logo.png
        sed -i \
        -e "s|DOMAIN=.*|DOMAIN=${env.domain}|" \
        -e "s|EMAIL=.*|EMAIL=${user.email}|" \
        .env
        docker-compose up -d
    - env.file.AddFavorite:
        nodeGroup: cp
        path: ${globals.path}
        keyword: ${globals.shortname}

addons:
  - id: change-domain
    name: Domain Configuration
    description: Change domain name and issue Let's Encrypt certificates.
    permanent: true
    buttons:
      - confirmText: Are you sure you want to proceed?
        loadingText: Changing domain...
        action: changeDomain
        caption: Change
        successText: The domain has been updated successfully!
        settings: domain
        title: Please specify the new domain name

    actions:
      changeDomain:
        - cmd[cp]: |-
            cd ${globals.path}
            sed -i \
            -e "s|DOMAIN=.*|DOMAIN=${settings.domain}|" \
            .env
            docker-compose up -d --force-recreate
    
  - id: update
    name: Update
    description: Pull the latest version of docker containers
    permanent: true
    buttons:
      - confirmText: Are you sure you want to proceed?
        loadingText: Updating...
        action: pullContainers
        caption: Update
        successText: Your environment has been updated!
        title: Update
    actions:
      pullContainers:
        -  cmd[cp]: |-
            cd ${globals.path}
            docker-compose pull
            docker-compose down
            docker-compose up -d --force-recreate
success: | 
  **${env.displayName}**: [https://${env.domain}/](https://${env.domain}/)
  
  **Username:** admin
  
  **Password:** admin
  - Change the default password by logging in and going to **Settings** > **User Management**
  - If you want to map a custom domain, point an A record at **${nodes.cp.extIPs}** then use the **Domain Configuration** Add-On to change the domain name and issue a new Let's Encrypt cert.